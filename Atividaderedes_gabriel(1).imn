node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 192.0.2.1/24
	!
	interface eth1
	 ip address 192.0.3.1/24
	!
    }
    canvas c1
    iconcoords {370.0 121.0}
    labelcoords {370.0 153.0}
    interface-peer {eth0 n6}
    interface-peer {eth1 n7}
}

node n2 {
    type router
    model PC
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 192.0.3.20/24
	!
    }
    canvas c1
    iconcoords {360.0 318.0}
    labelcoords {360.0 350.0}
    interface-peer {eth0 n7}
}

node n3 {
    type router
    model PC
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 192.0.3.21/24
	!
    }
    canvas c1
    iconcoords {513.0 339.0}
    labelcoords {513.0 371.0}
    interface-peer {eth0 n7}
}

node n4 {
    type router
    model PC
    network-config {
	hostname n4
	!
	interface eth0
	 ip address 192.0.3.22/24
	!
    }
    canvas c1
    iconcoords {654.0 320.0}
    labelcoords {654.0 352.0}
    interface-peer {eth0 n7}
}

node n6 {
    type router
    model host
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 192.0.2.10/24
	!
    }
    canvas c1
    iconcoords {217.0 170.0}
    labelcoords {217.0 202.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('Servidor_gabriel.html', )
	cmdup=('python -m SimpleHTTPServer 80', )
	meta=Servidorgabriel
	}
    }
    custom-config {
	custom-config-id service:UserDefined:Servidor_gabriel.html
	custom-command Servidor_gabriel.html
	config {
	<!DOCTYPE html>
	<html>
	  <head>
	    <title>Suporte Técnico de Redes - Gabriel</title>
	  </head>
	  
	  <body>
	    <h1>Suporte Técnico de Redes - Gabriel!</h1>
	  </body>
	</html>
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n7 {
    type lanswitch
    network-config {
	hostname n7
	!
    }
    canvas c1
    iconcoords {517.0 168.0}
    labelcoords {517.0 192.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n3}
    interface-peer {e3 n4}
}

link l1 {
    nodes {n6 n1}
    bandwidth 0
}

link l2 {
    nodes {n1 n7}
    bandwidth 0
}

link l3 {
    nodes {n7 n2}
    bandwidth 0
}

link l4 {
    nodes {n7 n3}
    bandwidth 0
}

link l5 {
    nodes {n7 n4}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

